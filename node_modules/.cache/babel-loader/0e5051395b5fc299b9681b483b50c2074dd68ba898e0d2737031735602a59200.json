{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kkonkima\\\\Downloads\\\\01-starting-project (6)\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    // https://react-http-e189d-default-rtdb.firebaseio.com/\n    // https://swapi.dev/api/films\n    try {\n      const response = await fetch('https://react-http-e189d-default-rtdb.firebaseio.com/movies.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  });\n\n  // useEffect(()=>{\n  //   fetchMoviesHandler();\n  // },[fetchMoviesHandler]);\n  useEffect(fetchMoviesHandler, []);\n  function addMovieHandler(movie) {\n    fetch('https://react-http-e189d-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  // useEffect(()=>{\n  //   fetchMoviesHandler();\n  // },[fetchMoviesHandler]);\n\n  // async function fetchMoviesHandler() {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try{\n  //     const response = await fetch('https://swapi.dev/api/film/');\n  //     if(!response.ok){\n  //       throw new Error('Something went wrong!');\n  //     }\n  //   const data = await response.json();\n\n  //   const transformedMovies = data.results.map((movieData)=> {\n  //     return {\n  //       id: movieData.episode_id,\n  //       title: movieData.title,\n  //       openingText: movieData.opening_crawl,\n  //       releaseDate: movieData.release_date\n  //     }\n  //   })\n  //   setMovies(transformedMovies);\n  //   }\n  //   catch(error) {\n  //     setError(error.message);\n  //   }\n  //   setIsLoading(false);\n  // }\n\n  // function fetchMoviesHandler() {\n  //   fetch('https://swapi.dev/api/films').then(response =>{\n  //     return response.json();\n  //   }).then(data => {\n  //     const transformedMovies = data.results.map(movieData => {\n  //       return {\n  //         id: movieData.episode_id,\n  //         title: movieData.title,\n  //         openingText: movieData.opening_crawl,\n  //         releaseDate: movieData.release_date\n  //       };\n  //     })\n  //     setMovies(transformedMovies);\n  //   });\n  // }\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nYb692ouuFWm3aetsG14gB9xAUU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","addMovieHandler","movie","method","body","JSON","stringify","headers","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kkonkima/Downloads/01-starting-project (6)/01-starting-project/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\n  const [movies,setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  const fetchMoviesHandler = useCallback( async ()=> {\n    setIsLoading(true);\n    setError(null);\n    // https://react-http-e189d-default-rtdb.firebaseio.com/\n    // https://swapi.dev/api/films\n    try{\n      const response = await \n      fetch('https://react-http-e189d-default-rtdb.firebaseio.com/movies.json');\n      if(!response.ok){\n        throw new Error('Something went wrong!');\n      }\n    const data = await response.json();\n      \n    const transformedMovies = data.results.map((movieData)=> {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      }\n    })\n    setMovies(transformedMovies);\n    }\n    catch(error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  })\n\n  // useEffect(()=>{\n  //   fetchMoviesHandler();\n  // },[fetchMoviesHandler]);\n   useEffect(fetchMoviesHandler,[]);\n   function addMovieHandler(movie) {\n    fetch('https://react-http-e189d-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n  }\n  // useEffect(()=>{\n  //   fetchMoviesHandler();\n  // },[fetchMoviesHandler]);\n\n  // async function fetchMoviesHandler() {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try{\n  //     const response = await fetch('https://swapi.dev/api/film/');\n  //     if(!response.ok){\n  //       throw new Error('Something went wrong!');\n  //     }\n  //   const data = await response.json();\n      \n  //   const transformedMovies = data.results.map((movieData)=> {\n  //     return {\n  //       id: movieData.episode_id,\n  //       title: movieData.title,\n  //       openingText: movieData.opening_crawl,\n  //       releaseDate: movieData.release_date\n  //     }\n  //   })\n  //   setMovies(transformedMovies);\n  //   }\n  //   catch(error) {\n  //     setError(error.message);\n  //   }\n  //   setIsLoading(false);\n  // }\n\n  // function fetchMoviesHandler() {\n  //   fetch('https://swapi.dev/api/films').then(response =>{\n  //     return response.json();\n  //   }).then(data => {\n  //     const transformedMovies = data.results.map(movieData => {\n  //       return {\n  //         id: movieData.episode_id,\n  //         title: movieData.title,\n  //         openingText: movieData.opening_crawl,\n  //         releaseDate: movieData.release_date\n  //       };\n  //     })\n  //     setMovies(transformedMovies);\n  //   });\n  // }\n\n  let content = <p>Found no movies</p>;\n\n  if(movies.length > 0) {\n    content = <MoviesList movies= {movies} />\n  }\n\n  if(error) {\n    content = <p>{error}</p>\n  }\n\n  if(isLoading){\n    content = <p>Loading...</p>\n  }\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie = {addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {content}\n        {/* {!isLoading && movies.length > 0 && <MoviesList movies={movies} /> }\n        {!isLoading && movies.length === 0 && !error && <p>Found no movies.</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loading...</p>} */}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}